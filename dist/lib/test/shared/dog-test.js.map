{"version":3,"sources":["../../../../lib/test/shared/dog-test.js"],"names":["_chai","require","_chai2","_interopRequireDefault","_sinon","_sinonChai","_sinonChai2","_mocha","_dog","_dog2","obj","__esModule","default","should","use","describe","it","stub","console","barkInConsole","log","have","been","calledWith","restore"],"mappings":"AAAA;;AAEA,IAAIA,QAAQC,QAAQ,MAAR,CAAZ;;AAEA,IAAIC,SAASC,uBAAuBH,KAAvB,CAAb;;AAEA,IAAII,SAASH,QAAQ,OAAR,CAAb;;AAEA,IAAII,aAAaJ,QAAQ,YAAR,CAAjB;;AAEA,IAAIK,cAAcH,uBAAuBE,UAAvB,CAAlB;;AAEA,IAAIE,SAASN,QAAQ,OAAR,CAAb;;AAEA,IAAIO,OAAOP,QAAQ,kBAAR,CAAX;;AAEA,IAAIQ,QAAQN,uBAAuBK,IAAvB,CAAZ;;AAEA,SAASL,sBAAT,CAAgCO,GAAhC,EAAqC;AAAE,SAAOA,OAAOA,IAAIC,UAAX,GAAwBD,GAAxB,GAA8B,EAAEE,SAASF,GAAX,EAArC;AAAwD;;AAE/FR,OAAOU,OAAP,CAAeC,MAAf,G,CAAyB;;AAEzBX,OAAOU,OAAP,CAAeE,GAAf,CAAmBR,YAAYM,OAA/B;;AAEA,CAAC,GAAGL,OAAOQ,QAAX,EAAqB,QAArB,EAA+B,YAAY;AACzC,GAAC,GAAGR,OAAOQ,QAAX,EAAqB,KAArB,EAA4B,YAAY;AACtC,KAAC,GAAGR,OAAOQ,QAAX,EAAqB,eAArB,EAAsC,YAAY;AAChD,OAAC,GAAGR,OAAOS,EAAX,EAAe,0CAAf,EAA2D,YAAY;AACrE,SAAC,GAAGZ,OAAOa,IAAX,EAAiBC,OAAjB,EAA0B,KAA1B;AACA,YAAIT,MAAMG,OAAV,CAAkB,WAAlB,EAA+BO,aAA/B;AACAD,gBAAQE,GAAR,CAAYP,MAAZ,CAAmBQ,IAAnB,CAAwBC,IAAxB,CAA6BC,UAA7B,CAAwC,yBAAxC;AACAL,gBAAQE,GAAR,CAAYI,OAAZ;AACD,OALD;AAMD,KAPD;AAQD,GATD;AAUD,CAXD","file":"dog-test.js","sourcesContent":["'use strict';\n\nvar _chai = require('chai');\n\nvar _chai2 = _interopRequireDefault(_chai);\n\nvar _sinon = require('sinon');\n\nvar _sinonChai = require('sinon-chai');\n\nvar _sinonChai2 = _interopRequireDefault(_sinonChai);\n\nvar _mocha = require('mocha');\n\nvar _dog = require('../../shared/dog');\n\nvar _dog2 = _interopRequireDefault(_dog);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n_chai2.default.should(); /* eslint-disable import/no-extraneous-dependencies, no-console */\n\n_chai2.default.use(_sinonChai2.default);\n\n(0, _mocha.describe)('Shared', function () {\n  (0, _mocha.describe)('Dog', function () {\n    (0, _mocha.describe)('barkInConsole', function () {\n      (0, _mocha.it)('should print a bark string with its name', function () {\n        (0, _sinon.stub)(console, 'log');\n        new _dog2.default('Test Toby').barkInConsole();\n        console.log.should.have.been.calledWith('Wah wah, I am Test Toby');\n        console.log.restore();\n      });\n    });\n  });\n});"]}